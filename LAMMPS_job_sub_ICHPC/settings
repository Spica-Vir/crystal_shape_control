# Job submission scripts
SUBMISSION_EXT
.qsub

NCPU_PER_NODE
48

MEM_PER_NODE
50

BUDGET_CODE

TIME_OUT
3

# Job execution scripts. 
# NB: Should be kept at the same directory as 'settings' and 'gen_sub'!
LMP_SCRIPT
runPlmp

POST_PROCESSING_SCRIPT
post_processing

JOB_TMPDIR
/rds/general/ephemeral/user/hz1420/ephemeral


# Executables
EXEDIR
module load

EXE_PLMP
lammps/19Mar2020

EXE_LMP


# file formats table
PRE_CALC
-------------------------------------------------------------------------------------
SAVED                TEMPORARY            DEFINITION
-------------------------------------------------------------------------------------
jobname.in           jobname.in           LAMMPS main input file
jobname.in.init      jobname.in.init      init section
jobname.data         jobname.data         atom definition section
jobname.in.settings  jobname.in.settings  settings section
------------------------------ RESTART FILES ----------------------------------------
pre_job.restart.*    pre.restart.*        restart file from a previous job
-------------------------------------------------------------------------------------

POST_CALC
-------------------------------------------------------------------------------------
SAVED                TEMPORARY            DEFINITION
-------------------------------------------------------------------------------------
jobname.restart/     *.restart.*          restart files
-------------------------------------------------------------------------------------
                         

JOB_SUBMISSION_TEMPLATE
----------------------------------------------------------------------------------------
#!/bin/bash  --login
#PBS -N ${V_JOBNAME}
#PBS -l select=${V_ND}:ncpus=${V_NCPU}:mpiprocs=${V_NCPU}:ompthreads=1:mem=${V_MEM}
#PBS -l walltime=${V_WT}:00

echo "<qsub_standard_output>"
date
echo "<qstat -f ${PBS_JOBID}>"
qstat -f ${PBS_JOBID}
echo "</qstat -f ${PBS_JOBID}>"

# number of cores per node used
export NCORES=${V_NCPU}
# number of processes
export NPROCESSES=${V_NP}

# Make sure any symbolic links are resolved to absolute path
export PBS_O_WORKDIR=$(readlink -f ${PBS_O_WORKDIR})

# Set the number of threads to 1
#   This prevents any system libraries from automatically
#   using threading.
export OMP_NUM_THREADS=1
# env
echo "</qsub_standard_output>"

# to sync nodes: MPI dependends on modules
cd ${PBS_O_WORKDIR}
module load  intel-suite/2019.4
module load  mpi/intel-2019

# start calculation
timeout ${V_TOUT} ${V_SCRIPTDIR}/${V_SCRIPT} ${V_JOBNAME} ${V_REFNAME}
${V_SCRIPTDIR}/${V_POSCRIPT} ${V_JOBNAME}

###
if [[ -f ./${V_JOBNAME}.run ]];then
chmod 755 ./${V_JOBNAME}.run
./${V_JOBNAME}.run
fi
----------------------------------------------------------------------------------------

